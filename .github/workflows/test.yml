name: Test CI

on:
#  workflow_run:
#    workflows: ["Build CI"]
#    types: 
#      - completed
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
      
jobs:
  backend-tests:  
    runs-on: ubuntu-latest
    name: "backend tests"
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    defaults:
      run:
        working-directory: ./library_back
        
    services:
      postgres_main:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: setup python
        uses: actions/setup-python@v3
        with:
           python-version: ${{ matrix.python-version }}
      - name: install req
        run: |
              pip install -r requirements.txt
      - name: run tests
        env:
            DEBUG: "0"
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_HOST: localhost
            POSTGRES_PORT: 5432
        run: |
              python manage.py makemigrations
              python manage.py migrate
              python manage.py test
                
  frontend-tests:
    runs-on: ubuntu-latest
    name: "frontend tests"
    defaults:
      run:
        working-directory: ./library_front
    strategy:
      max-parallel: 4
      matrix:
        node-version: [18.12.x]
        
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: run install
        run: npm install
      - name: run tests
        run: npm run test
      
